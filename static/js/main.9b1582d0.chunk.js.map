{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleUsernameChange","event","setState","firstName","target","value","handleLastnameChange","lastName","handleEmailChange","Email","handleTopicChange","topic","handleSubmit","alert","state","preventDefault","this","onSubmit","class","type","id","onChange","className","onclick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiGeA,E,kDA1FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,qBAAuB,SAAAC,GACnB,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAbb,EAgBnBC,qBAAuB,SAAAL,GACnB,EAAKC,SAAS,CACVK,SAAUN,EAAMG,OAAOC,SAlBZ,EAsBnBG,kBAAoB,SAAAP,GAChB,EAAKC,SAAS,CACVO,MAAOR,EAAMG,OAAOC,SAxBT,EA4BnBK,kBAAoB,SAAAT,GAChB,EAAKC,SAAS,CACVS,MAAOV,EAAMG,OAAOC,SA9BT,EAkCnBO,aAAe,SAAAX,GACXY,MAAM,GAAD,OAAI,EAAKC,MAAMX,UAAf,YAA4B,EAAKW,MAAMP,SAAvC,YAAmD,EAAKO,MAAML,MAA9D,YAAuE,EAAKK,MAAMH,QACvFV,EAAMc,kBAjCN,EAAKD,MAAQ,CACTX,UAAW,GACXI,SAAU,GACVE,MAAM,GACNE,MAAO,SAPI,E,0CAuCnB,WAEI,MAA6CK,KAAKF,MAA1CX,EAAR,EAAQA,UAAWI,EAAnB,EAAmBA,SAASE,EAA5B,EAA4BA,MAAOE,EAAnC,EAAmCA,MACnC,OACI,sBAAMM,SAAUD,KAAKJ,aAArB,SACA,sBAAKM,MAAM,QAAX,UACI,sDACA,gCACI,+CACA,uBACIC,KAAK,OACLC,GAAG,SACHf,MAAOF,EACPkB,SAAUL,KAAKhB,0BAGvB,gCACI,8CACA,uBACImB,KAAK,OACLd,MAAOE,EACPc,SAAUL,KAAKV,0BAGvB,gCACI,0CACA,uBACIa,KAAK,QACLd,MAAOI,EACPY,SAAUL,KAAKR,uBAGvB,gCACI,0CACA,yBAAQH,MAAOM,EAAOU,SAAUL,KAAKN,kBAArC,UACI,wBAAQL,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,uBAGR,uBACA,wBAAQiB,UAAU,MAAMH,KAAK,SAASI,QAAQ,cAA9C,oBACd,mBAAGH,GAAG,qB,GAlFWI,aCQJC,E,4JATX,WACI,OACI,qBAAKH,UAAU,MAAf,SACI,cAAC,EAAD,U,GAJEE,aCQHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b1582d0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nfunction showInput() {\r\n    document.getElementById('display').innerHTML = \r\n                document.getElementById(\"firstn\").value;\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            Email:'',\r\n            topic: 'react'\r\n        }\r\n    }\r\n\r\n    handleUsernameChange = event => {\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n    }\r\n    handleLastnameChange = event => {\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = event => {\r\n        this.setState({\r\n            Email: event.target.value\r\n        })\r\n    }\r\n\r\n    handleTopicChange = event => {\r\n        this.setState({\r\n            topic: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        alert(`${this.state.firstName} ${this.state.lastName} ${this.state.Email} ${this.state.topic}`)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n   \r\n        const { firstName, lastName,Email, topic } = this.state\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div class=\"outer\">\r\n                <h3>Fill up your details</h3>\r\n                <div>\r\n                    <label>firstName </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"firstn\"\r\n                        value={firstName}\r\n                        onChange={this.handleUsernameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>lastName </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={this.handleLastnameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={Email}\r\n                        onChange={this.handleEmailChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Topic</label>\r\n                    <select value={topic} onChange={this.handleTopicChange}>\r\n                        <option value=\"react\">React</option>\r\n                        <option value=\"angular\">Angular</option>\r\n                        <option value=\"vue\">Vue</option>\r\n                    </select>\r\n                </div>\r\n                <br></br>\r\n                <button className=\"btn\" type=\"submit\" onclick=\"showInput()\">Submit</button>\r\n  <p id='display'></p>\r\n                </div>\r\n                \r\n            </form>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react'\nimport './App.css'\nimport Form from './Form'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Form />\n            </div>\n        )\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}